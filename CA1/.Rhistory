cases <- read_tsv(path_to_cases)
View(cases)
# Convert agegroup to midpoints
age_midpoints <- c(2.5, 7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5,
52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5, 87.5)
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(splines)
# Q1
path_to_cases <- "cases.tsv"
cases<- read_tsv(path_to_cases)
setwd("/Users/silpasoninallacheruvu/Documents/GitHub/5BD000/Assignment1")
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(splines)
# Q1
path_to_cases <- "cases.tsv"
cases<- read_tsv(path_to_cases)
cases$agegroup <- factor(cases$agegroup,
levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
"25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-64", "65-69", "70-74",
"75-79", "80-84", "85-89"))
ggplot(cases, aes(x = agegroup, y = n, fill = sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of Colon Cancer Cases by Age Group and Sex",
x = "Age Group",
y = "Number of Cases") +
theme_minimal()+
scale_y_continuous(labels = label_comma())+
theme(plot.title = element_text(hjust = 0.5))
# Q2
total_cases_by_year_sex<- cases %>%
group_by(year, sex) %>%
summarise(total_cases = sum(n, na.rm = TRUE))
ggplot(subset(total_cases_by_year_sex, sex == "Female"), aes(x = year, y = total_cases)) +
geom_line() +
geom_point() +
labs(title = "Number of Colon Cancer Cases for Females by Year",
x = "Year",
y = "Total Number of Cases") +
theme_minimal()+
scale_y_continuous(labels = label_comma())+
theme(plot.title = element_text(hjust = 0.5))
ggplot(subset(total_cases_by_year_sex, sex == "Male"), aes(x = year, y = total_cases)) +
geom_line() +
geom_point() +
labs(title = "Number of Colon Cancer Cases for Males by Year",
x = "Year",
y = "Total Number of Cases") +
theme_minimal()+
scale_y_continuous(labels = label_comma())+
theme(plot.title = element_text(hjust = 0.5))
# Q3
path_to_population <- "population.tsv"
population<- read_tsv("path_to_population")
library(readr)
library(ggplot2)
library(dplyr)
library(scales)
library(splines)
# Q1
path_to_cases <- "cases.tsv"
cases<- read_tsv(path_to_cases)
cases$agegroup <- factor(cases$agegroup,
levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
"25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-64", "65-69", "70-74",
"75-79", "80-84", "85-89"))
ggplot(cases, aes(x = agegroup, y = n, fill = sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of Colon Cancer Cases by Age Group and Sex",
x = "Age Group",
y = "Number of Cases") +
theme_minimal()+
scale_y_continuous(labels = label_comma())+
theme(plot.title = element_text(hjust = 0.5))
# Q2
total_cases_by_year_sex<- cases %>%
group_by(year, sex) %>%
summarise(total_cases = sum(n, na.rm = TRUE))
ggplot(subset(total_cases_by_year_sex, sex == "Female"), aes(x = year, y = total_cases)) +
geom_line() +
geom_point() +
labs(title = "Number of Colon Cancer Cases for Females by Year",
x = "Year",
y = "Total Number of Cases") +
theme_minimal()+
scale_y_continuous(labels = label_comma())+
theme(plot.title = element_text(hjust = 0.5))
ggplot(subset(total_cases_by_year_sex, sex == "Male"), aes(x = year, y = total_cases)) +
geom_line() +
geom_point() +
labs(title = "Number of Colon Cancer Cases for Males by Year",
x = "Year",
y = "Total Number of Cases") +
theme_minimal()+
scale_y_continuous(labels = label_comma())+
theme(plot.title = element_text(hjust = 0.5))
# Q3
path_to_population <- "population.tsv"
population<- read_tsv(path_to_population)
population$agegroup <- factor(population$agegroup,
levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
"25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-64", "65-69", "70-74",
"75-79", "80-84", "85-89"))
ggplot(population, aes(x = agegroup, y = n_pop, fill = sex)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ year) +
labs(title = "Population Size by Age Group and Year",
x = "Age Group",
y = "Population Size") +
theme_minimal() +
scale_y_continuous(labels = label_comma())+
theme(axis.text.x = element_blank())+
theme(plot.title = element_text(hjust = 0.5))
# Q4
merged_data <- left_join(cases, population, by = c("agegroup", "year", "sex"))
summary_data <- merged_data %>%
group_by(year, sex) %>%
summarise(
total_cases = sum(n, na.rm = TRUE),
total_population = sum(n_pop, na.rm = TRUE)
)
head(summary_data)
# Q5
merged_data <- merged_data %>%
mutate(incidence_rate = n/ n_pop)
head(merged_data)
summary_data <- summary_data %>%
mutate(incidence_rate = total_cases / total_population)
head(summary_data)
# Q6
ggplot(summary_data, aes(x = year, y = incidence_rate, color = sex)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE) +
labs(title = "Incidence Rate of Colon Cancer Over Calendar Year",
x = "Year",
y = "Incidence Rate") +
theme_minimal()
ggplot(merged_data, aes(x = year, y = incidence_rate, color = agegroup)) +
geom_point(cex = 0.7) +
geom_smooth(method = "loess", se = FALSE) +
labs(title = "Incidence Rate of Colon Cancer Over Calendar Year by age group and sex",
x = "Year",
y = "Incidence Rate") +
theme_minimal() +
facet_wrap(~ sex)
# Q7
poisson_model <- glm(total_cases ~ year + sex + offset(log(total_population)),
data = summary_data,
family = poisson)
summary(poisson_model)
# Q8
predict_data <- data.frame(year = c(1970, 2020),
sex = rep(c("Male", "Female"), each = 2),
total_population = 100000)
predict_data$predicted_cases <- predict(poisson_model,
newdata = predict_data,
type = "response")
predict_data$incidence_rate <- (predict_data$predicted_cases / predict_data$total_population)
print(predict_data)
# Q9
poisson_model_age <- glm(n ~ year + sex + agegroup + offset(log(n_pop)),
data = merged_data,
family = poisson)
summary(poisson_model_age)
predict_data_age <- data.frame(year = c(1970, 2020),
agegroup = '70-74',
sex = rep(c("Male", "Female"), each = 2),
n_pop = 100000)
predict_data_age$predicted_cases <- predict(poisson_model_age,
newdata = predict_data_age,
type = "response")
predict_data_age$incidence_rate <- (predict_data_age$predicted_cases / predict_data_age$n_pop)
print(predict_data_age)
#Q10
# Convert agegroup to midpoints
age_midpoints <- c(2.5, 7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5,
52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5, 87.5)
names(age_midpoints) <- levels(cases$agegroup)
merged_data <- merged_data %>%
mutate(age_mid = age_midpoints[as.character(agegroup)])
# Fit Poisson model with splines
spline_model <- glm(n ~ ns(year, df = 4) * sex + ns(age_mid, df = 4),
data = merged_data,
offset = log(n_pop),
family = poisson)
summary(spline_model)
# Data for prediction
predict_data <- expand.grid(
year = seq(min(merged_data$year), max(merged_data$year), by = 1),
age_mid = c(52, 72, 87),  # Specific ages for prediction
sex = c("Male", "Female"),
n_pop = 100000  # Assume a constant population for prediction
)
predict_data$predicted_cases <- predict(spline_model, newdata = predict_data, type = "response")
predict_data$incidence_rate <- predict_data$predicted_cases / predict_data$n_pop
# Extract observed data for age groups 50-54, 70-74, 85-89
observed_data <- merged_data %>%
filter(agegroup %in% c("50-54", "70-74", "85-89")) %>%
group_by(year, sex, agegroup) %>%
summarise(incidence_rate = sum(n) / sum(n_pop), .groups = 'drop')
# Match midpoints for comparison
observed_data <- observed_data %>%
mutate(age_mid = age_midpoints[as.character(agegroup)])
# Plot modeled vs. observed incidence rates
ggplot() +
geom_line(data = predict_data, aes(x = year, y = incidence_rate, color = factor(age_mid), linetype = sex), size = 1) +
geom_point(data = observed_data, aes(x = year, y = incidence_rate, shape = sex, color = factor(age_mid)), size = 2) +
labs(
title = "Modeled vs Observed Incidence Rates Across Calendar Time",
x = "Year",
y = "Incidence Rate",
color = "Age",
linetype = "Sex",
shape = "Sex"
) +
theme_minimal()
View(spline_model)
summary(spline_model)
observed_data <- observed_data %>%
mutate(age_mid = age_midpoints[as.character(agegroup)])
View(summary_data)
ggplot(summary_data, aes(x = year, y = incidence_rate, color = sex)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE) +
labs(title = "Incidence Rate of Colon Cancer Over Calendar Year",
x = "Year",
y = "Incidence Rate") +
theme_minimal()
ggplot(merged_data, aes(x = year, y = incidence_rate, color = agegroup)) +
geom_point(cex = 0.7) +
geom_smooth(method = "loess", se = FALSE) +
labs(title = "Incidence Rate of Colon Cancer Over Calendar Year by age group and sex",
x = "Year",
y = "Incidence Rate") +
theme_minimal() +
facet_wrap(~ sex)
poisson_model <- glm(total_cases ~ year + sex + offset(log(total_population)),
data = summary_data,
family = poisson)
summary(poisson_model)
predict_data <- data.frame(year = c(1970, 2020),
sex = rep(c("Male", "Female"), each = 2),
total_population = 100000)
predict_data$predicted_cases <- predict(poisson_model,
newdata = predict_data,
type = "response")
predict_data$incidence_rate <- (predict_data$predicted_cases / predict_data$total_population)
print(predict_data)
poisson_model_age <- glm(n ~ year + sex + agegroup + offset(log(n_pop)),
data = merged_data,
family = poisson)
summary(poisson_model_age)
predict_data_age <- data.frame(year = c(1970, 2020),
agegroup = '70-74',
sex = rep(c("Male", "Female"), each = 2),
n_pop = 100000)
predict_data_age$predicted_cases <- predict(poisson_model_age,
newdata = predict_data_age,
type = "response")
predict_data_age$incidence_rate <- (predict_data_age$predicted_cases / predict_data_age$n_pop)
print(predict_data_age)
View(poisson_model_age)
View(predict_data_age)
# Convert agegroup to midpoints
age_midpoints <- c(2.5, 7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5,
52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5, 87.5)
names(age_midpoints) <- levels(cases$agegroup)
age_midpoints
merged_data <- merged_data %>%
mutate(age_mid = age_midpoints[as.character(agegroup)])
View(merged_data)
# Fit Poisson model with splines
spline_model <- glm(n ~ ns(year, df = 4) * sex + ns(age_mid, df = 4)* sex,
data = merged_data,
offset = log(n_pop),
family = poisson)
summary(spline_model)
# Fit Poisson model with splines
spline_model <- glm(n ~ ns(year, df = 4) * sex + ns(age_mid, df = 4),
data = merged_data,
offset = log(n_pop),
family = poisson)
summary(spline_model)
spline_model <- glm(n ~ ns(year, df = 4) * sex * ns(age_mid, df = 4),
data = merged_data,
offset = log(n_pop),
family = poisson)
summary(spline_model)
spline_model <- glm(n ~ ns(year, df = 3) * sex * ns(age_mid, df = 3),
data = merged_data,
offset = log(n_pop),
family = poisson)
summary(spline_model)
# Fit Poisson model with splines
spline_model <- glm(n ~ ns(year, df = 5) * sex * ns(age_mid, df = 5),
data = merged_data,
offset = log(n_pop),
family = poisson)
summary(spline_model)
# Data for prediction
predict_data <- expand.grid(
year = seq(min(merged_data$year), max(merged_data$year), by = 1),
age_mid = c(52, 72, 87),  # Specific ages for prediction
sex = c("Male", "Female"),
n_pop = 100000  # Assume a constant population for prediction
)
predict_data$predicted_cases <- predict(spline_model, newdata = predict_data, type = "response")
predict_data$incidence_rate <- predict_data$predicted_cases / predict_data$n_pop
# Extract observed data for age groups 50-54, 70-74, 85-89
observed_data <- merged_data %>%
filter(agegroup %in% c("50-54", "70-74", "85-89")) %>%
group_by(year, sex, agegroup) %>%
summarise(incidence_rate = sum(n) / sum(n_pop), .groups = 'drop')
# Match midpoints for comparison
observed_data <- observed_data %>%
mutate(age_mid = age_midpoints[as.character(agegroup)])
# Plot modeled vs. observed incidence rates
ggplot() +
geom_line(data = predict_data, aes(x = year, y = incidence_rate, color = factor(age_mid), linetype = sex), size = 1) +
geom_point(data = observed_data, aes(x = year, y = incidence_rate, shape = sex, color = factor(age_mid)), size = 2) +
labs(
title = "Modeled vs Observed Incidence Rates Across Calendar Time",
x = "Year",
y = "Incidence Rate",
color = "Age",
linetype = "Sex",
shape = "Sex"
) +
theme_minimal()
View(observed_data)
# Extract observed data for age groups 50-54, 70-74, 85-89
observed_data <- merged_data %>%
filter(agegroup %in% c("50-54", "70-74", "85-89")) %>%
group_by(year, sex, agegroup) %>%
summarise(incidence_rate = sum(n) / sum(n_pop), .groups = 'drop')
View(observed_data)
# Plot modeled vs. observed incidence rates
ggplot() +
geom_line(data = predict_data, aes(x = year, y = incidence_rate, color = factor(agegroup), linetype = sex), size = 1) +
geom_point(data = observed_data, aes(x = year, y = incidence_rate, shape = sex, color = factor(agegroup)), size = 2) +
labs(
title = "Modeled vs Observed Incidence Rates Across Calendar Time",
x = "Year",
y = "Incidence Rate",
color = "Age",
linetype = "Sex",
shape = "Sex"
) +
theme_minimal()
View(predict_data)
# Plot modeled vs. observed incidence rates
ggplot() +
geom_line(data = predict_data, aes(x = year, y = incidence_rate, color = factor(age_mid), linetype = sex), size = 1) +
geom_point(data = observed_data, aes(x = year, y = incidence_rate, shape = sex, color = factor(agegroup)), size = 2) +
labs(
title = "Modeled vs Observed Incidence Rates Across Calendar Time",
x = "Year",
y = "Incidence Rate",
color = "Age",
linetype = "Sex",
shape = "Sex"
) +
theme_minimal()
ggplot() +
geom_line(data = predict_data, aes(x = year, y = incidence_rate, color = factor(age_mid), linetype = sex), size = 1) +
geom_point(data = observed_data, aes(x = year, y = incidence_rate, shape = sex, color = factor(agegroup)), size = 2) +
labs(
title = "Modeled vs Observed Incidence Rates Across Calendar Time",
x = "Year",
y = "Incidence Rate",
color = "Age",
linetype = "Sex",
shape = "Sex"
) +
theme_classic()
ggplot() +
geom_line(data = predict_data, aes(x = year, y = incidence_rate, color = factor(age_mid), linetype = sex), size = 1) +
geom_point(data = observed_data, aes(x = year, y = incidence_rate, shape = sex, color = factor(agegroup)), size = 2) +
labs(
title = "Modeled vs Observed Incidence Rates Across Calendar Time",
x = "Year",
y = "Incidence Rate",
color = "Age",
linetype = "Sex",
shape = "Sex"
) +
theme_minimal()
ggplot() +
geom_line(data = predict_data, aes(x = year, y = incidence_rate, color = factor(age_mid), linetype = sex), size = 1) +
geom_point(data = observed_data, aes(x = year, y = incidence_rate, shape = sex, color = factor(agegroup)), size = 2) +
labs(
title = "Modeled vs Observed Incidence Rates Across Calendar Time",
x = "Year",
y = "Incidence Rate",
color = "Age",
linetype = "Sex",
shape = "Sex"
) +
theme_light()
head(spline_model)
View(spline_model)
spline_model <- glm(n ~ ns(year, df = 4) * ns(age_midpoint, df = 4) * sex + offset(log(n_pop)),
data = merged_data,
family = poisson)
age_midpoints <- c(2.5, 7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5,
52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5, 87.5)
names(age_midpoints) <- levels(cases$agegroup)
merged_data <- merged_data %>%
mutate(age_mid = age_midpoints[as.character(agegroup)])
spline_model <- glm(n ~ ns(year, df = 4) * ns(age_midpoint, df = 4) * sex + offset(log(n_pop)),
+                     data = merged_data,
spline_model <- glm(n ~ ns(year, df = 4) * ns(age_midpoint, df = 4) * sex + offset(log(n_pop)),
data = merged_data,
family = poisson)
age_midpoints <- c(2.5, 7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5,
52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5, 87.5)
names(age_midpoints) <- levels(cases$agegroup)
merged_data <- merged_data %>%
mutate(age_mid = age_midpoints[as.character(agegroup)])
spline_model <- glm(n ~ ns(year, df = 4) * ns(age_midpoint, df = 4) * sex + offset(log(n_pop)),
data = merged_data,
family = poisson)
spline_model <- glm(n ~ ns(year, df = 4) * ns(age_midpoints, df = 4) * sex + offset(log(n_pop)),
data = merged_data,
family = poisson)
spline_model <- glm(n ~ ns(year, df = 4) * ns(age_mid, df = 4) * sex + offset(log(n_pop)),
data = merged_data,
family = poisson)
print(spline_model$aic)
spline_model <- glm(n ~ ns(year, df = 4) * sex  + ns(age_mid, df = 4) * ns(year, df = 4),
data = merged_data,
offset = log(n_pop),
family = poisson)
print(spline_model$aic)
setwd("/Users/silpasoninallacheruvu/Documents/GitHub/MT5019/CA1")
# Calculate percentages
women_in_favor <- 309
women_total <- 500
men_in_favor <- 319
men_total <- 600
women_against <- women_total - women_in_favor
men_against <- men_total - men_in_favor
# Percentages
women_in_favor_pct <- round((women_in_favor / women_total) * 100, 1)
women_against_pct <- round((women_against / women_total) * 100, 1)
men_in_favor_pct <- round((men_in_favor / men_total) * 100, 1)
men_against_pct <- round((men_against / men_total) * 100, 1)
# Create summary table
summary_table <- data.frame(
Gender = c("Women", "Men"),
`Percentage In Favor` = c(women_in_favor_pct, men_in_favor_pct),
`Percentage Against` = c(women_against_pct, men_against_pct)
)
kable(summary_table, col.names = c("Gender", "% In Favor", "% Against"),
caption = "Percentage In Favor and Against Legal Abortion by Gender", align = c("l", "c", "c"))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
#prepare the data and calculate row percentages
tab1<- as.table(rbind(c(309, 191), c(319, 281)))
dimnames(tab1) <- list(gender = c("women", "men"),opinion = c("favor","against"))
addmargins(tab1)
addmargins(prop.table(tab1,1),2)
# Calculate X2, G2 and p-values
chisq.test(tab1,correct=FALSE)
print(chi_sq_test)
# Calculate X2, G2 and p-values
chi_sq_test <- chisq.test(tab1,correct=FALSE)
print(chi_sq_test)
# install.packages("MASS")
library(MASS)
log_likelihood_ratio <- loglm(~gender+opinion,tab1)
print(log_likelihood_ratio)
# The function loglm fits a loglinear model, but we leave the details about that.
# Log linear models will be handled in assignment 3 but with the function glm instead of loglm.
install.packages("MASS")
install.packages("MASS")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(MASS)
# Calculate X2, G2 and p-values
chi_sq_test <- chisq.test(tab1,correct=FALSE)
print(chi_sq_test)
# install.packages("MASS")
log_likelihood_ratio <- loglm(~gender+opinion,tab1)
print(log_likelihood_ratio)
# The function loglm fits a loglinear model, but we leave the details about that.
# Log linear models will be handled in assignment 3 but with the function glm instead of loglm.
# Calculate X2, G2 and p-values
chisq.test(tab1,correct=FALSE)
# install.packages("MASS")
log_likelihood_ratio <- loglm(~gender+opinion,tab1)
print(log_likelihood_ratio)
# The function loglm fits a loglinear model, but we leave the details about that.
# Log linear models will be handled in assignment 3 but with the function glm instead of loglm.
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(MASS)
library(epitools)
# Calculate odds ratio and 95% confidence interval
# install.packages("epitools")
oddsratio(tab1, method = "wald", rev="neither")
# Check alternative row/column reversals to match the intended risk ratio
risk_ratio_col <- riskratio(tab1, rev = "col")
print(risk_ratio_col)
