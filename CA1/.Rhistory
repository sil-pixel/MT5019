P_Value = signif(1 - pchisq(loglm_result$lrt, df = loglm_result$df), 4)
)
# Present the result in a visually appealing table
kable(
loglm_summary,
caption = "Loglinear Model: Likelihood Ratio Test Results",
col.names = c("Statistic", "Value", "Degrees of Freedom", "P-Value"),
align = c("l", "c", "c", "c")
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Calculate Odds Ratio and Confidence Interval
odds_ratio_result <- oddsratio(tab2, method = "wald", rev = "neither")
# Extract the relevant results
odds_ratio_summary <- data.frame(
Measure = c("Odds Ratio", "95% CI Lower", "95% CI Upper"),
Value = c(
odds_ratio_result$measure[2, 1],  # Odds Ratio
odds_ratio_result$measure[2, 2], # Lower CI
odds_ratio_result$measure[2, 3]  # Upper CI
)
)
# Format the table for better visualization
kable(
odds_ratio_summary,
caption = "Odds Ratio and 95% Confidence Interval",
col.names = c("Measure", "Value"),
align = c("l", "c")
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Calculate Risk Ratio and Confidence Interval
risk_ratio_result <- riskratio(tab2, rev = "neither")
# Extract the relevant results
risk_ratio_summary <- data.frame(
Measure = c("Risk Ratio", "95% CI Lower", "95% CI Upper"),
Value = c(
risk_ratio_result$measure[2, 1],  # Risk Ratio
risk_ratio_result$measure[2, 2], # Lower CI
risk_ratio_result$measure[2, 3]  # Upper CI
)
)
# Format the table for better visualization
kable(
risk_ratio_summary,
caption = "Risk Ratio and 95% Confidence Interval",
col.names = c("Measure", "Value"),
align = c("l", "c")
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Create the data frame for the table
result_table <- data.frame(
Dataset = c("Original", "One-Tenth", "One-Hundredth"),
Chi2_Statistic = c(92.205, 9.241, 0.775),
G2_Statistic = c(93.449, 9.364, 0.783),
p_value = c("< 2.2 × 10^-16", "0.002", "0.379")
)
# Print the table using knitr::kable
knitr::kable(
result_table,
col.names = c("Dataset", "X² Statistic", "G² Statistic", "p-value"),
caption = "Summary of Chi-Squared and Likelihood Ratio Tests",
align = c("l", "c", "c", "c")
)
# Create the data frame for the table
result_table <- data.frame(
Dataset = c("Original", "One-Tenth", "One-Hundredth"),
Chi2_Statistic = c(92.205, 9.241, 0.775),
G2_Statistic = c(93.449, 9.364, 0.783),
p_value = c("< 2.2 × 10^-16", "0.002", "0.379")
)
# Print the table using knitr::kable
knitr::kable(
result_table,
col.names = c("Dataset", "X² Statistic", "G² Statistic", "p-value"),
caption = "Summary of Chi-Squared and Likelihood Ratio Tests",
align = c("l", "c", "c", "c")
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Create the data frame for the Odds Ratio table
odds_ratio_table <- data.frame(
Dataset = c("Original", "One-Tenth", "One-Hundredth"),
`Odds Ratio (Women)` = c(1.841, 1.841, 1.733),
`95% Confidence Interval` = c("[1.624, 2.087]", "[1.240, 2.734]", "[0.507, 5.928]")
)
# Print the Odds Ratio table using knitr::kable
knitr::kable(
odds_ratio_table,
col.names = c("Dataset", "Odds Ratio (Women)", "95% Confidence Interval"),
caption = "Odds Ratio for Women Across Datasets",
align = c("l", "c", "c")
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Create the data frame for the Risk Ratio table
risk_ratio_table <- data.frame(
Dataset = c("Original", "One-Tenth", "One-Hundredth"),
`Risk Ratio (Women)` = c(1.255, 1.256, 1.232),
`95% Confidence Interval` = c("[1.200, 1.314]", "[1.088, 1.450]", "[0.781, 1.941]")
)
# Print the Risk Ratio table using knitr::kable
knitr::kable(
risk_ratio_table,
col.names = c("Dataset", "Risk Ratio (Women)", "95% Confidence Interval"),
caption = "Risk Ratio for Women Across Datasets",
align = c("l", "c", "c")
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
library(MASS)
# Create the contingency table
tab5 <- matrix(
c(500000, 500500, 501515, 499090), # Data in row-major order
nrow = 2,               # Two rows
byrow = TRUE,           # Fill matrix by rows
dimnames = list(
gender = c("Men", "Women"),        # Row names
admission = c("Admitted", "Not Admitted") # Column names
)
)
# Display the table
knitr::kable(
tab5,
caption = "Summary Table"
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Convert to table
tab_cont <- as.table(tab5)
#tab_cont
# Perform likelihood ratio test
lr_result <- loglm(~ gender + admission,tab_cont)
# Perform chi-squared test
chi_result <- chisq.test(tab5, correct = FALSE)
# Print results
cat("Table:\n")
#print(tab_cont)
# why is it printed three times?
cat("\nLikelihood Ratio Test:\n")
print(lr_result)
# Perform likelihood ratio test
lr_result <- loglm(~ gender + admission,tab_cont)
# Extract key components
deviance <- lr_result$deviance
df <- lr_result$df
p_value <- pchisq(deviance, df, lower.tail = FALSE)
# Create a summary table
lr_summary <- data.frame(
Statistic = "Deviance (G²)",
Value = round(deviance, 2),
Degrees_of_Freedom = df,
P_Value = format.pval(p_value, digits = 3, eps = 0.001)
)
# Display the table
kable(
lr_summary,
col.names = c("Statistic", "Value", "Degrees of Freedom", "P-Value"),
caption = "Log-Linear Model Summary"
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Perform chi-squared test
chi_result <- chisq.test(tab5, correct = FALSE)
# Extract key components
chi_squared <- chi_result$statistic
df <- chi_result$parameter
p_value <- chi_result$p.value
# Create a summary table
chi_summary <- data.frame(
Statistic = "Chi-Squared (X²)",
Value = round(chi_squared, 2),
Degrees_of_Freedom = df,
P_Value = format.pval(p_value, digits = 3, eps = 0.001)
)
# Display the table
library(knitr)
kable(
chi_summary,
col.names = c("Statistic", "Value", "Degrees of Freedom", "P-Value"),
caption = "Chi-Squared Test Summary"
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Print results
#cat("Table:\n")
#print(tab_cont)
# why is it printed three times?
#cat("\nLikelihood Ratio Test:\n")
#print(lr_result)
# Perform likelihood ratio test
lr_result <- loglm(~ gender + admission,tab_cont)
# Extract key components
deviance <- lr_result$deviance
df <- lr_result$df
p_value <- pchisq(deviance, df, lower.tail = FALSE)
# Create a summary table
lr_summary <- data.frame(
Statistic = "Likelihood ratio (G²)",
Value = round(deviance, 2),
Degrees_of_Freedom = df,
P_Value = format.pval(p_value, digits = 3, eps = 0.001)
)
# Display the table
kable(
lr_summary,
col.names = c("Statistic", "Value", "Degrees of Freedom", "P-Value"),
caption = "Log-Linear Model Summary"
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Perform chi-squared test
chi_result <- chisq.test(tab5, correct = FALSE)
# Extract key components
chi_squared <- chi_result$statistic
df <- chi_result$parameter
p_value <- chi_result$p.value
# Create a summary table
chi_summary <- data.frame(
Statistic = "Chi-Squared (X²)",
Value = round(chi_squared, 2),
Degrees_of_Freedom = df,
P_Value = format.pval(p_value, digits = 3, eps = 0.001)
)
# Display the table
library(knitr)
kable(
chi_summary,
col.names = c("Statistic", "Value", "Degrees of Freedom", "P-Value"),
caption = "Chi-Squared Test Summary"
) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Print results
#cat("Table:\n")
#print(tab_cont)
# why is it printed three times?
#cat("\nLikelihood Ratio Test:\n")
#print(lr_result)
tinytex::reinstall_tinytex()
rmarkdown::render("Assignment1.Rmd")
setwd("/Users/silpasoninallacheruvu/Documents/GitHub/MT5019/CA1")
rmarkdown::render("Assignment1.Rmd")
tinytex::parse_tex("Assignment1.tex")
parse_tex("Assignment1.tex")
tinytex::reinstall_tinytex()
texlive::parse_tex("Assignment1.tex")
render("Assignment1.Rmd", pdf_document(latex_engine = "pdflatex"))
rmarkdown::render("Assignment1.Rmd", pdf_document(latex_engine = "pdflatex"))
knitr::opts_chunk$set(echo = TRUE)
periodontitis_table <- matrix(
c(22, 75, 148, 265), # Data in row-major order
nrow = 2,            # Two rows
byrow = TRUE,        # Fill matrix by rows
dimnames = list(
`Regularly Use of Dental Floss` = c("Yes", "No"),         # Row names
`Periodontitis` = c("Yes", "No")            # Column names
)
)
# Display the table
knitr::kable(
periodontitis_table,
caption = "Use of Dental Floss in the last 5 years"
)
tab1 <- matrix(
c(309, 191, 319, 281), # Data in row-major order
nrow = 2,                 # Two rows: Men and Women
byrow = TRUE,             # Fill matrix by rows
dimnames = list(
gender = c("Women", "Men"),        # Row names
admission = c("In favor", "Against") # Column names
)
)
# Display the table
knitr::kable(
tab1,
caption = "Opinions on legal abortion"
)
# Create the 2x2 table
periodontitis_table <- matrix(
c(22, 75, 148, 265, 97, 413, 170, 340, 510), # Data including margins
nrow = 3,                                   # Three rows: Yes, No, Sum
byrow = TRUE,                               # Fill matrix by rows
dimnames = list(
`Dental Floss Use` = c("Yes", "No", "Σ"), # Row names
`Periodontitis` = c("Yes", "No", "Σ")    # Column names
)
)
# Convert to data frame for better printing
periodontitis_df <- as.data.frame.matrix(periodontitis_table)
# Use kable to display the table
kable(
periodontitis_df,
caption = "Regular Use of Dental Floss and Periodontitis",
align = "c"
)
# Create the 2x2 table
periodontitis_table <- matrix(
c(22, 75, 148, 265, 97, 413, 170, 340, 510), # Data including margins
nrow = 3,                                   # Three rows: Yes, No, Sum
byrow = TRUE,                               # Fill matrix by rows
dimnames = list(
`Dental Floss Use` = c("Regular Dental Floss Use", "No", "Σ"), # Row names
`Periodontitis` = c("Periodontitis", "No", "Σ")    # Column names
)
)
# Convert to data frame for better printing
periodontitis_df <- as.data.frame.matrix(periodontitis_table)
# Use kable to display the table
kable(
periodontitis_df,
caption = "Regular Use of Dental Floss and Periodontitis",
align = "c"
)
# Create the 2x2 table
periodontitis_table <- matrix(
c(22, 75, 148, 265, 97, 413, 170, 340, 510), # Data including margins
nrow = 3,                                   # Three rows: Yes, No, Sum
byrow = TRUE,                               # Fill matrix by rows
dimnames = list(
`Dental Floss Use` = c("Regular Dental Floss Use", "Irregular Dental Floss Use", "Σ"), # Row names
`Periodontitis` = c("Periodontitis", "No Periodontitis", "Σ")    # Column names
)
)
# Convert to data frame for better printing
periodontitis_df <- as.data.frame.matrix(periodontitis_table)
# Use kable to display the table
kable(
periodontitis_df,
caption = "Regular Use of Dental Floss and Periodontitis",
align = "c"
)
# Create the 2x2 table
periodontitis_table <- matrix(
c(22, 75, 148, 265, 97, 413, 170, 340, 510), # Data including margins
nrow = 3,                                   # Three rows: Yes, No, Sum
byrow = TRUE,                               # Fill matrix by rows
dimnames = list(
`Dental Floss Use` = c("Used Dental Floss", "Not Used Dental Floss", "Σ"), # Row names
`Periodontitis` = c("Periodontitis", "No Periodontitis", "Σ")    # Column names
)
)
# Convert to data frame for better printing
periodontitis_df <- as.data.frame.matrix(periodontitis_table)
# Use kable to display the table
kable(
periodontitis_df,
caption = "Regular Use of Dental Floss and Periodontitis",
align = "c"
)
# Prepare data
dental_data <- data.frame(
floss = c(1, 0), # 1 = yes, 0 = no
periodontitis_yes = c(22, 148),
periodontitis_no = c(75, 265)
)
# Logistic regression
model <- glm(cbind(periodontitis_yes, periodontitis_no) ~ floss,
family = binomial, data = dental_data)
# Summary of the model
summary(model)
# Prepare data
use<-c("no","no", "yes","yes")
per<-c("no","yes","no","yes")
n<-c(265,148,75,22)
data21 <- data.frame(use,per,n)
data21
model21<-glm(per~use, weights =n, family = binomial(link=logit), data=data21)
x<-c(0,0,1,1)  # x=0 if dental fluss is not used, x=1 if dental fluss is used
y<-c(0,1,0,1)  # y=0 if periodontitis is No, y=1 if periodontitis is Yes
n<-c(265,148,75,22)
data21a <- data.frame(x,y,n)
model21a<-glm(y~x, weights=n, family=binomial(link=logit), data=data21a)
summary(model21a)
use<-c("no","no", "yes","yes")
per<-c("no","yes","no","yes")
n<-c(265,148,75,22)
data21 <- data.frame(use,per,n)
data21
# First the characters "per" and "use" must be converted to dummy variables.
data21$use <- as.factor(data$use)
use<-c("no","no", "yes","yes")
per<-c("no","yes","no","yes")
n<-c(265,148,75,22)
data21 <- data.frame(use,per,n)
data21
# First the characters "per" and "use" must be converted to dummy variables.
data21$use <- as.factor(data$use)
use<-c("no","no", "yes","yes")
per<-c("no","yes","no","yes")
n<-c(265,148,75,22)
data21 <- data.frame(use,per,n)
data21
# First the characters "per" and "use" must be converted to dummy variables.
#data21$use <- as.factor(data$use)
data21$per <- as.factor(data$per)
use<-c("no","no", "yes","yes")
per<-c("no","yes","no","yes")
n<-c(265,148,75,22)
data21 <- data.frame(use,per,n)
data21
# First the characters "per" and "use" must be converted to dummy variables.
#data21$use <- as.factor(data$use)
#data21$per <- as.factor(data$per)
model21<-glm(per~use, weights =n, family = binomial(link=logit), data=data21)
# Prepare data
dental_data <- data.frame(
floss = c(1, 0), # 1 = yes, 0 = no
periodontitis_yes = c(22, 148),
periodontitis_no = c(75, 265)
)
# Logistic regression
model <- glm(cbind(periodontitis_yes, periodontitis_no) ~ floss,
family = binomial(link=logit), data = dental_data)
# Summary of the model
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Prepare data
dental_data <- data.frame(
floss = c(1, 0), # 1 = yes, 0 = no
periodontitis_yes = c(22, 148),
periodontitis_no = c(75, 265)
)
# Logistic regression
model <- glm(cbind(periodontitis_yes, periodontitis_no) ~ floss,
family = binomial(link=logit), data = dental_data)
# Extract model coefficients summary
model_summary <- summary(model)
# Create a data frame with relevant data
coefficients_table <- data.frame(
Term = rownames(model_summary$coefficients),
Estimate = model_summary$coefficients[, "Estimate"],
`Std. Error` = model_summary$coefficients[, "Std. Error"],
`z value` = model_summary$coefficients[, "z value"],
`Pr(>|z|)` = model_summary$coefficients[, "Pr(>|z|)"]
)
# Print the table using kable
kable(
coefficients_table,
caption = "Summary of Logistic Regression Model Coefficients",
align = c("l", "c", "c", "c", "c"),
col.names = c("Term", "Estimate", "Std. Error", "z value", "P-value")
)
# Prepare data
dental_data <- data.frame(
floss = c(1, 0), # 1 = yes, 0 = no
periodontitis_yes = c(22, 148),
periodontitis_no = c(75, 265)
)
# Logistic regression
model <- glm(cbind(periodontitis_yes, periodontitis_no) ~ floss,
family = binomial(link=logit), data = dental_data)
# Extract model coefficients summary
model_summary <- summary(model)
# Create a data frame with relevant data
coefficients_table <- data.frame(
Term = rownames(model_summary$coefficients),
Estimate = model_summary$coefficients[, "Estimate"],
`Std. Error` = model_summary$coefficients[, "Std. Error"],
`z value` = model_summary$coefficients[, "z value"],
`Pr(>|z|)` = model_summary$coefficients[, "Pr(>|z|)"]
)
# Print the table using kable
kable(
coefficients_table,
caption = "Summary of Logistic Regression Model A Coefficients",
align = c("l", "c", "c", "c", "c"),
col.names = c("Term", "Estimate", "Std. Error", "z value", "P-value")
)
# Prepare data
periodontitis_data <- data.frame(
periodontitis = c(1, 0), # 1 = yes, 0 = no
floss_yes = c(22, 75),
floss_no = c(148, 265)
)
# Logistic regression
model_periodontitis <- glm(cbind(floss_yes, floss_no) ~ periodontitis,
family = binomial(link=logit), data = periodontitis_data)
# Extract model coefficients summary
model_periodontitis_summary <- summary(model_periodontitis)
# Create a data frame with relevant data
coefficients_table2 <- data.frame(
Term = rownames(model_periodontitis_summary$coefficients),
Estimate = model_periodontitis_summary$coefficients[, "Estimate"],
`Std. Error` = model_periodontitis_summary$coefficients[, "Std. Error"],
`z value` = model_periodontitis_summary$coefficients[, "z value"],
`Pr(>|z|)` = model_periodontitis_summary$coefficients[, "Pr(>|z|)"]
)
# Print the table using kable
kable(
coefficients_table,
caption = "Summary of Logistic Regression Model B Coefficients",
align = c("l", "c", "c", "c", "c"),
col.names = c("Term", "Estimate", "Std. Error", "z value", "P-value")
)
# Prepare data
periodontitis_data <- data.frame(
periodontitis = c(1, 0), # 1 = yes, 0 = no
floss_yes = c(22, 75),
floss_no = c(148, 265)
)
# Logistic regression
model_periodontitis <- glm(cbind(floss_yes, floss_no) ~ periodontitis,
family = binomial(link=logit), data = periodontitis_data)
# Extract model coefficients summary
model_periodontitis_summary <- summary(model_periodontitis)
# Create a data frame with relevant data
coefficients_table2 <- data.frame(
Term = rownames(model_periodontitis_summary$coefficients),
Estimate = model_periodontitis_summary$coefficients[, "Estimate"],
`Std. Error` = model_periodontitis_summary$coefficients[, "Std. Error"],
`z value` = model_periodontitis_summary$coefficients[, "z value"],
`Pr(>|z|)` = model_periodontitis_summary$coefficients[, "Pr(>|z|)"]
)
# Print the table using kable
kable(
coefficients_table,
caption = "Summary of Logistic Regression Model B Coefficients",
align = c("l", "c", "c", "c", "c"),
col.names = c("Term", "Estimate", "Std. Error", "z value", "P-value")
)
